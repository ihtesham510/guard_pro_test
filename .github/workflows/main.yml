name: Flutter CI/CD Pipeline

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches: [main, develop, development]
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write
  actions: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: üìÇ Checkout code
        uses: actions/checkout@v4

      - name: üöÄ Cache pub deps
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: ‚òïÔ∏è Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: ü¶ã Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: üìù Create .env file
        run: |
          echo "${{ secrets.DATABASE_URL }}" > .env
          echo "${{ secrets.SUPABASE_URL }}" >> .env
          echo "${{ secrets.SUPABASE_ANON_KEY }}" >> .env
        working-directory: mobile

      - name: üì• Get Flutter dependencies
        run: flutter pub get
        working-directory: mobile

      - name: ‚úÖ Analyze for issues
        run: flutter analyze
        working-directory: mobile

      - name: üèóÔ∏è Build APK (Release)
        run: flutter build apk --release --split-per-abi
        working-directory: mobile

      - name: üì¶ Build App Bundle (Release)
        run: flutter build appbundle --release
        working-directory: mobile

      - name: üóëÔ∏è Delete .env file
        run: rm -rf .env
        working-directory: mobile

      - name: üì§ Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            mobile/build/app/outputs/flutter-apk/*.apk
            mobile/build/app/outputs/bundle/release/app-release.aab

  build-ios:
    runs-on: macos-latest
    steps:
      - name: üìÇ Checkout code
        uses: actions/checkout@v4

      - name: üöÄ Cache pub deps
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: ü¶ã Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: üìù Create .env file
        run: |
          echo "${{ secrets.DATABASE_URL }}" > .env
          echo "${{ secrets.SUPABASE_URL }}" >> .env
          echo "${{ secrets.SUPABASE_ANON_KEY }}" >> .env
        working-directory: mobile

      - name: üì• Get Flutter dependencies
        run: flutter pub get
        working-directory: mobile

      - name: ‚úÖ Analyze for issues
        run: flutter analyze
        working-directory: mobile

      - name: üì± Install CocoaPods
        run: |
          cd ios
          pod install
        working-directory: mobile

      - name: üèóÔ∏è Build iOS (No Code Signing)
        run: flutter build ios --release --no-codesign
        working-directory: mobile

      - name: üì¶ Create iOS Archive
        run: |
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r app-release-ios.zip Payload
        working-directory: mobile

      - name: üóëÔ∏è Delete .env file
        run: rm -rf .env
        working-directory: mobile

      - name: üì§ Upload iOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-builds
          path: mobile/build/ios/iphoneos/app-release-ios.zip

  create-release:
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # Only run on version tags
    steps:
      - name: üìÇ Checkout code
        uses: actions/checkout@v4

      - name: üì• Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-builds
          path: ./android-builds

      - name: üì• Download iOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: ios-builds
          path: ./ios-builds

      - name: üè∑Ô∏è Get release version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: üöÄ Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          body: |
            ## Release ${{ steps.get_version.outputs.VERSION }}

            ### What's included:
            - üì± Android APKs (split per ABI)
            - üì¶ Android App Bundle (app-release.aab)
            - üçé iOS Archive (app-release-ios.zip)

            ### Installation:
            - **Android**: Download and install the appropriate APK file for your device architecture
            - **iOS**: Download the iOS archive (requires development provisioning profile)
          files: |
            android-builds/*.apk
            android-builds/app-release.aab
            ios-builds/app-release-ios.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
