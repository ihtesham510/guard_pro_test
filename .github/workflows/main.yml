name: Flutter CI/CD Pipeline

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches: [main, develop, development]
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write
  actions: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Cache pub deps
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: ☕️ Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: 🦋 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: 📝 Create .env file
        run: |
          echo "${{ secrets.DATABASE_URL }}" > .env
          echo "${{ secrets.SUPABASE_URL }}" >> .env
          echo "${{ secrets.SUPABASE_ANON_KEY }}" >> .env
        working-directory: mobile

      - name: 📥 Get Flutter dependencies
        run: flutter pub get
        working-directory: mobile

      - name: ✅ Analyze for issues
        run: flutter analyze
        working-directory: mobile

      - name: 🏗️ Build APK (Release)
        run: flutter build apk --release --split-per-abi
        working-directory: mobile

      - name: 📦 Build App Bundle (Release)
        run: flutter build appbundle --release
        working-directory: mobile

      - name: 🗑️ Delete .env file
        run: rm -rf .env
        working-directory: mobile

      - name: 📤 Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            mobile/build/app/outputs/*.apk
            mobile/build/app/outputs/bundle/release/app-release.aab

  create-release:
    needs: [build-android]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # Only run on version tags
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-builds
          path: ./android-builds

      - name: 🏷️ Get release version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: 🚀 Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          body: |
            ## Release ${{ steps.get_version.outputs.VERSION }}

            ### What's included:
            - 📱 Android APKs (split per ABI)
            - 📦 Android App Bundle (app-release.aab)

            ### Installation:
            - **Android**: Download and install the appropriate APK file for your device architecture
          files: |
            android-builds/baselineProfiles/*.apk
            android-builds/bundle/release/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
